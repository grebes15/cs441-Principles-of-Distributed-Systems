Looking at the analysis and timings from the XML Client Server lab I can see that the timings are a lot close together than the previous socket labs. Then again the same number of information was not sent over the network in the XMLRPC lab compared to the Socket lab. For the most part the timings hovered around 0.061 seconds. As you can see the average run times for all of the different client and server sizes did not change tremendously from the increase in the size of hat was sent over the network. For instance, the Small Client and Small Server  had an average run time of 0.0608 and the Small Client and Large Server had a mean of 0.0624. That is a very small increase in run time. Then we look at a Large Client and Small Server then mean was at 0.0604 which is actually faster than the time of a Small Client and Small Server. A Large Client and Large Server was .0814. Even then it is still not a big increase in the timing of the different sizes of the XMLRPC Servers and Clients. Then there is the Shuffle Client and Server that was created that shuffles the input from the command line. The average timing for the client and server turned out to be 0.0614. Comparing this lab to the Socket lab I can say that it wasn't as fun using XMLRPC in comparison to using Sockets in java. It was just a lot more annoying and I ran in to a lot of errors with casting and using Vectors in Java. However, knowing how XMLRPC differs from the Socket Communication I can strongly say that if we ran the same sizes on XMLRPC the timing would differ a lot between sockets and XMLRPc and XMLRPC will run slower than Sockets because of unwrapping on both sides of the Client and Server.
